generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Company {
  id           Int           @id @default(autoincrement())
  cnpj         String        @unique
  nickname     String
  name         String
  initialDeposit Float
  address      String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  users        User[]
  expenses     Expense[]
  revenues     Revenue[]
  categories   Category[]
}

model User {
  id           Int           @id @default(autoincrement())
  companyId    Int
  role         String
  name         String
  email        String        @unique
  hash         String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  company      Company       @relation(fields: [companyId], references: [id], onDelete: Cascade)
  expenses     Expense[]
  revenues     Revenue[]
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String
  companyId    Int?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  expenses     Expense[]
  company      Company?      @relation(fields: [companyId], references: [id])
}

model Expense {
  id                Int      @id @default(autoincrement())
  description       String
  companyId         Int
  categoryId        Int
  userId            Int
  transactionDate   DateTime
  recurring         Boolean
  recurringInterval String?
  amount            Float
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  company           Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  category          Category @relation(fields: [categoryId], references: [id])
  user              User     @relation(fields: [userId], references: [id])
}

model Revenue {
  id              Int      @id @default(autoincrement())
  companyId       Int
  userId          Int
  recordedDate    DateTime @default(now())
  transactionDate DateTime
  cash            Float
  credit          Float
  debit           Float
  pix             Float
  meal            Float
  tip             Float
  total           Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  company         Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  user            User     @relation(fields: [userId], references: [id])
}
